{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nconst Enums_1 = require(\"../../../../Enums\");\n\nclass Bubbler {\n  constructor(container) {\n    this.container = container;\n  }\n\n  static calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n      const size = particleValue + (modeValue - optionsValue) * ratio;\n      return Utils_1.Utils.clamp(size, particleValue, modeValue);\n    } else if (modeValue < optionsValue) {\n      const size = particleValue - (optionsValue - modeValue) * ratio;\n      return Utils_1.Utils.clamp(size, modeValue, particleValue);\n    }\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const options = container.options;\n    const mouse = container.interactivity.mouse;\n    const events = options.interactivity.events;\n    const divs = events.onDiv;\n    const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n\n    if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n  }\n\n  reset(particle, force) {\n    if (!particle.bubble.inRange || force) {\n      delete particle.bubble.divId;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }\n\n  interact() {\n    const options = this.container.options;\n    const events = options.interactivity.events;\n    const onHover = events.onHover;\n    const onClick = events.onClick;\n    const hoverEnabled = onHover.enable;\n    const hoverMode = onHover.mode;\n    const clickEnabled = onClick.enable;\n    const clickMode = onClick.mode;\n    const divs = events.onDiv;\n\n    if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n      this.hoverBubble();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n      this.clickBubble();\n    } else {\n      Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (id, div) => this.singleDivHover(id, div));\n    }\n  }\n\n  singleDivHover(id, div) {\n    const container = this.container;\n    const elem = document.getElementById(id);\n\n    if (!elem) {\n      return;\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n    const pos = {\n      x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n      y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n    };\n    const repulseRadius = elem.offsetWidth / 2 * pxRatio;\n    const area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query.filter(t => area.contains(t.getPosition()))) {\n      particle.bubble.inRange = true;\n      const divs = container.options.interactivity.modes.bubble.divs;\n      const divBubble = Utils_1.Utils.divMode(divs, id);\n\n      if (!particle.bubble.divId || particle.bubble.divId !== id) {\n        this.reset(particle, true);\n        particle.bubble.divId = id;\n      }\n\n      this.hoverBubbleSize(particle, 1, divBubble);\n      this.hoverBubbleOpacity(particle, 1, divBubble);\n      this.hoverBubbleColor(particle, divBubble);\n    }\n  }\n\n  process(particle, distMouse, timeSpent, data) {\n    const container = this.container;\n    const bubbleParam = data.bubbleObj.optValue;\n\n    if (bubbleParam === undefined) {\n      return;\n    }\n\n    const options = container.options;\n    const bubbleDuration = options.interactivity.modes.bubble.duration;\n    const bubbleDistance = container.retina.bubbleModeDistance;\n    const particlesParam = data.particlesObj.optValue;\n    const pObjBubble = data.bubbleObj.value;\n    const pObj = data.particlesObj.value || 0;\n    const type = data.type;\n\n    if (bubbleParam !== particlesParam) {\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === Enums_1.ProcessBubbleType.size) {\n              particle.bubble.radius = value;\n            }\n\n            if (type === Enums_1.ProcessBubbleType.opacity) {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === Enums_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === Enums_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === Enums_1.ProcessBubbleType.size) {\n          delete particle.bubble.radius;\n        }\n\n        if (type === Enums_1.ProcessBubbleType.opacity) {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }\n\n  clickBubble() {\n    var _a;\n\n    const container = this.container;\n    const options = container.options;\n    const mouseClickPos = container.interactivity.mouse.clickPosition;\n\n    if (mouseClickPos === undefined) {\n      return;\n    }\n\n    const distance = container.retina.bubbleModeDistance;\n    const query = container.particles.quadTree.query(new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, distance));\n\n    for (const particle of query) {\n      particle.bubble.inRange = true;\n      const pos = particle.getPosition();\n      const distMouse = Utils_1.Utils.getDistance(pos, mouseClickPos);\n      const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n      if (container.bubble.clicking) {\n        if (timeSpent > options.interactivity.modes.bubble.duration) {\n          container.bubble.durationEnd = true;\n        }\n\n        if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n          container.bubble.clicking = false;\n          container.bubble.durationEnd = false;\n        }\n\n        const sizeData = {\n          bubbleObj: {\n            optValue: container.retina.bubbleModeSize,\n            value: particle.bubble.radius\n          },\n          particlesObj: {\n            optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n            value: particle.size.value\n          },\n          type: Enums_1.ProcessBubbleType.size\n        };\n        this.process(particle, distMouse, timeSpent, sizeData);\n        const opacityData = {\n          bubbleObj: {\n            optValue: options.interactivity.modes.bubble.opacity,\n            value: particle.bubble.opacity\n          },\n          particlesObj: {\n            optValue: particle.particlesOptions.opacity.value,\n            value: particle.opacity.value\n          },\n          type: Enums_1.ProcessBubbleType.opacity\n        };\n        this.process(particle, distMouse, timeSpent, opacityData);\n\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= container.retina.bubbleModeDistance) {\n            this.hoverBubbleColor(particle);\n          } else {\n            delete particle.bubble.color;\n          }\n        } else {\n          delete particle.bubble.color;\n        }\n      }\n    }\n  }\n\n  hoverBubble() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (mousePos === undefined) {\n      return;\n    }\n\n    const distance = container.retina.bubbleModeDistance;\n    const query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n\n    for (const particle of query) {\n      particle.bubble.inRange = true;\n      const pos = particle.getPosition();\n      const distance = Utils_1.Utils.getDistance(pos, mousePos);\n      const ratio = 1 - distance / container.retina.bubbleModeDistance;\n\n      if (distance <= container.retina.bubbleModeDistance) {\n        if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n          this.hoverBubbleSize(particle, ratio);\n          this.hoverBubbleOpacity(particle, ratio);\n          this.hoverBubbleColor(particle);\n        }\n      } else {\n        this.reset(particle);\n      }\n\n      if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n        this.reset(particle);\n      }\n    }\n  }\n\n  hoverBubbleSize(particle, ratio, divBubble) {\n    var _a;\n\n    const container = this.container;\n    const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n    if (modeSize === undefined) {\n      return;\n    }\n\n    const optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n    const pSize = particle.size.value;\n    const size = Bubbler.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n    if (size !== undefined) {\n      particle.bubble.radius = size;\n    }\n  }\n\n  hoverBubbleOpacity(particle, ratio, divBubble) {\n    var _a;\n\n    const options = this.container.options;\n    const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n    if (modeOpacity === undefined) {\n      return;\n    }\n\n    const optOpacity = particle.particlesOptions.opacity.value;\n    const pOpacity = particle.opacity.value;\n    const opacity = Bubbler.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n\n    if (opacity !== undefined) {\n      particle.bubble.opacity = opacity;\n    }\n  }\n\n  hoverBubbleColor(particle, divBubble) {\n    var _a;\n\n    const options = this.container.options;\n\n    if (particle.bubble.color === undefined) {\n      const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n\n      if (modeColor === undefined) {\n        return;\n      }\n\n      const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n      particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n    }\n  }\n\n}\n\nexports.Bubbler = Bubbler;","map":{"version":3,"names":["Object","defineProperty","exports","value","Bubbler","Utils_1","require","Enums_1","constructor","container","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","size","Utils","clamp","isEnabled","options","mouse","interactivity","events","divs","onDiv","divBubble","isDivModeEnabled","DivMode","bubble","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","reset","particle","force","inRange","divId","opacity","radius","color","interact","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","id","div","singleDivHover","elem","document","getElementById","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","query","particles","quadTree","filter","t","contains","getPosition","modes","divMode","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","process","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","ProcessBubbleType","_a","mouseClickPos","distance","getDistance","Date","getTime","clickTime","clicking","sizeData","bubbleModeSize","sizeValue","opacityData","particlesOptions","mousePos","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","modeOpacity","optOpacity","pOpacity","modeColor","bubbleColor","Array","itemFromArray","ColorUtils","colorToHsl"],"sources":["/Users/isaicastro/Desktop/Projects/Face-Recognition/node_modules/tsparticles/dist/Core/Particle/Interactions/Mouse/Bubbler.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Enums_1 = require(\"../../../../Enums\");\nclass Bubbler {\n    constructor(container) {\n        this.container = container;\n    }\n    static calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n        if (modeValue > optionsValue) {\n            const size = particleValue + (modeValue - optionsValue) * ratio;\n            return Utils_1.Utils.clamp(size, particleValue, modeValue);\n        }\n        else if (modeValue < optionsValue) {\n            const size = particleValue - (optionsValue - modeValue) * ratio;\n            return Utils_1.Utils.clamp(size, modeValue, particleValue);\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble);\n    }\n    reset(particle, force) {\n        if (!particle.bubble.inRange || force) {\n            delete particle.bubble.divId;\n            delete particle.bubble.opacity;\n            delete particle.bubble.radius;\n            delete particle.bubble.color;\n        }\n    }\n    interact() {\n        const options = this.container.options;\n        const events = options.interactivity.events;\n        const onHover = events.onHover;\n        const onClick = events.onClick;\n        const hoverEnabled = onHover.enable;\n        const hoverMode = onHover.mode;\n        const clickEnabled = onClick.enable;\n        const clickMode = onClick.mode;\n        const divs = events.onDiv;\n        if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (id, div) => this.singleDivHover(id, div));\n        }\n    }\n    singleDivHover(id, div) {\n        const container = this.container;\n        const elem = document.getElementById(id);\n        if (!elem) {\n            return;\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n        };\n        const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n        const area = div.type === Enums_1.DivType.circle\n            ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n            : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query.filter((t) => area.contains(t.getPosition()))) {\n            particle.bubble.inRange = true;\n            const divs = container.options.interactivity.modes.bubble.divs;\n            const divBubble = Utils_1.Utils.divMode(divs, id);\n            if (!particle.bubble.divId || particle.bubble.divId !== id) {\n                this.reset(particle, true);\n                particle.bubble.divId = id;\n            }\n            this.hoverBubbleSize(particle, 1, divBubble);\n            this.hoverBubbleOpacity(particle, 1, divBubble);\n            this.hoverBubbleColor(particle, divBubble);\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container;\n        const bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.options;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === Enums_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === Enums_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        const mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.query(new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, distance));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const distMouse = Utils_1.Utils.getDistance(pos, mouseClickPos);\n            const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (container.bubble.clicking) {\n                if (timeSpent > options.interactivity.modes.bubble.duration) {\n                    container.bubble.durationEnd = true;\n                }\n                if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                    container.bubble.clicking = false;\n                    container.bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n                        value: particle.size.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.size,\n                };\n                this.process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: options.interactivity.modes.bubble.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: particle.particlesOptions.opacity.value,\n                        value: particle.opacity.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.opacity,\n                };\n                this.process(particle, distMouse, timeSpent, opacityData);\n                if (!container.bubble.durationEnd) {\n                    if (distMouse <= container.retina.bubbleModeDistance) {\n                        this.hoverBubbleColor(particle);\n                    }\n                    else {\n                        delete particle.bubble.color;\n                    }\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const distance = Utils_1.Utils.getDistance(pos, mousePos);\n            const ratio = 1 - distance / container.retina.bubbleModeDistance;\n            if (distance <= container.retina.bubbleModeDistance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        var _a;\n        const container = this.container;\n        const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio\n            : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n        const pSize = particle.size.value;\n        const size = Bubbler.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a;\n        const options = this.container.options;\n        const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        const optOpacity = particle.particlesOptions.opacity.value;\n        const pOpacity = particle.opacity.value;\n        const opacity = Bubbler.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, divBubble) {\n        var _a;\n        const options = this.container.options;\n        if (particle.bubble.color === undefined) {\n            const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n            particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}