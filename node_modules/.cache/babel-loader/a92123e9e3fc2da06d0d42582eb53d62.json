{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst Canvas_1 = require(\"./Canvas\");\n\nconst Particles_1 = require(\"./Particles\");\n\nconst Retina_1 = require(\"./Retina\");\n\nconst FrameManager_1 = require(\"./FrameManager\");\n\nconst Options_1 = require(\"../Options/Classes/Options\");\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Container {\n  constructor(id, sourceOptions) {\n    this.id = id;\n    this.sourceOptions = sourceOptions;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.noise = {\n      generate: () => {\n        return {\n          angle: Math.random() * Math.PI * 2,\n          length: Math.random()\n        };\n      },\n      init: () => {},\n      update: () => {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this.options = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (const preset of presets) {\n      this.options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    const shapes = Utils_1.Plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    if (this.sourceOptions) {\n      this.options.load(this.sourceOptions);\n    }\n\n    this.eventListeners = new Utils_1.EventListeners(this);\n  }\n\n  play(force) {\n    const needsUpdate = this.paused || force;\n\n    if (this.paused) {\n      this.paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n\n      this.lastFrameTime = performance.now();\n    }\n\n    this.draw();\n  }\n\n  pause() {\n    if (this.drawAnimationFrame !== undefined) {\n      Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n      delete this.drawAnimationFrame;\n    }\n\n    if (this.paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this.paused = true;\n    }\n  }\n\n  draw() {\n    this.drawAnimationFrame = Utils_1.Utils.animate(t => this.drawer.nextFrame(t));\n  }\n\n  getAnimationStatus() {\n    return !this.paused;\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    if (!noiseOrGenerator) {\n      return;\n    }\n\n    if (typeof noiseOrGenerator === \"function\") {\n      this.noise.generate = noiseOrGenerator;\n\n      if (init) {\n        this.noise.init = init;\n      }\n\n      if (update) {\n        this.noise.update = update;\n      }\n    } else {\n      if (noiseOrGenerator.generate) {\n        this.noise.generate = noiseOrGenerator.generate;\n      }\n\n      if (noiseOrGenerator.init) {\n        this.noise.init = noiseOrGenerator.init;\n      }\n\n      if (noiseOrGenerator.update) {\n        this.noise.update = noiseOrGenerator.update;\n      }\n    }\n  }\n\n  densityAutoParticles() {\n    this.initDensityFactor();\n    const numberOptions = this.options.particles.number;\n    const optParticlesNumber = numberOptions.value;\n    const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n    const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n    const particlesCount = this.particles.count;\n\n    if (particlesCount < particlesNumber) {\n      this.particles.push(Math.abs(particlesNumber - particlesCount));\n    } else if (particlesCount > particlesNumber) {\n      this.particles.removeQuantity(particlesCount - particlesNumber);\n    }\n  }\n\n  destroy() {\n    this.stop();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    this.drawers = new Map();\n    this.destroyed = true;\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  exportImage(callback, type, quality) {\n    var _a;\n\n    return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.options, undefined, 2);\n  }\n\n  refresh() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.stop();\n      yield this.start();\n    });\n  }\n\n  stop() {\n    if (!this.started) {\n      return;\n    }\n\n    this.started = false;\n    this.eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.clear();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n\n    this.plugins = new Map();\n    this.particles.linksColors = new Map();\n    delete this.particles.grabLineColor;\n    delete this.particles.linksColor;\n  }\n\n  start() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      if (this.started) {\n        return;\n      }\n\n      yield this.init();\n      this.started = true;\n      this.eventListeners.addListeners();\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.startAsync !== undefined) {\n          yield plugin.startAsync();\n        } else if (plugin.start !== undefined) {\n          plugin.start();\n        }\n      }\n\n      this.play();\n    });\n  }\n\n  init() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.retina.init();\n      this.canvas.init();\n      const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n\n      for (const [id, plugin] of availablePlugins) {\n        this.plugins.set(id, plugin);\n      }\n\n      for (const [, drawer] of this.drawers) {\n        if (drawer.init) {\n          yield drawer.init(this);\n        }\n      }\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.init) {\n          plugin.init(this.options);\n        } else if (plugin.initAsync !== undefined) {\n          yield plugin.initAsync(this.options);\n        }\n      }\n\n      this.particles.init();\n      this.densityAutoParticles();\n    });\n  }\n\n  initDensityFactor() {\n    const densityOptions = this.options.particles.number.density;\n\n    if (!this.canvas.element || !densityOptions.enable) {\n      return;\n    }\n\n    const canvas = this.canvas.element;\n    const pxRatio = this.retina.pixelRatio;\n    this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n  }\n\n}\n\nexports.Container = Container;","map":{"version":3,"names":["Object","defineProperty","exports","value","Container","tslib_1","require","Canvas_1","Particles_1","Retina_1","FrameManager_1","Options_1","Utils_1","constructor","id","sourceOptions","started","destroyed","paused","lastFrameTime","pageHidden","retina","Retina","canvas","Canvas","particles","Particles","drawer","FrameManager","noise","generate","angle","Math","random","PI","length","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","options","Options","presets","preset","load","Plugins","getPreset","shapes","getSupportedShapes","type","getShapeDrawer","set","eventListeners","EventListeners","play","force","needsUpdate","plugin","performance","now","draw","pause","drawAnimationFrame","undefined","Utils","cancelAnimation","animate","t","nextFrame","getAnimationStatus","setNoise","noiseOrGenerator","densityAutoParticles","initDensityFactor","numberOptions","number","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","push","abs","removeQuantity","destroy","stop","exportImg","callback","exportImage","quality","_a","element","toBlob","exportConfiguration","JSON","stringify","refresh","__awaiter","start","removeListeners","clear","linksColors","grabLineColor","linksColor","addListeners","startAsync","availablePlugins","getAvailablePlugins","initAsync","densityOptions","enable","pxRatio","pixelRatio","width","height","factor","area"],"sources":["/Users/isaicastro/Desktop/Projects/Face-Recognition/node_modules/tsparticles/dist/Core/Container.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.sourceOptions = sourceOptions;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.noise = {\n            generate: () => {\n                return {\n                    angle: Math.random() * Math.PI * 2,\n                    length: Math.random(),\n                };\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this.options = new Options_1.Options();\n        for (const preset of presets) {\n            this.options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        if (this.sourceOptions) {\n            this.options.load(this.sourceOptions);\n        }\n        this.eventListeners = new Utils_1.EventListeners(this);\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n            this.lastFrameTime = performance.now();\n        }\n        this.draw();\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw() {\n        this.drawAnimationFrame = Utils_1.Utils.animate((t) => this.drawer.nextFrame(t));\n    }\n    getAnimationStatus() {\n        return !this.paused;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!noiseOrGenerator) {\n            return;\n        }\n        if (typeof noiseOrGenerator === \"function\") {\n            this.noise.generate = noiseOrGenerator;\n            if (init) {\n                this.noise.init = init;\n            }\n            if (update) {\n                this.noise.update = update;\n            }\n        }\n        else {\n            if (noiseOrGenerator.generate) {\n                this.noise.generate = noiseOrGenerator.generate;\n            }\n            if (noiseOrGenerator.init) {\n                this.noise.init = noiseOrGenerator.init;\n            }\n            if (noiseOrGenerator.update) {\n                this.noise.update = noiseOrGenerator.update;\n            }\n        }\n    }\n    densityAutoParticles() {\n        this.initDensityFactor();\n        const numberOptions = this.options.particles.number;\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n        const particlesCount = this.particles.count;\n        if (particlesCount < particlesNumber) {\n            this.particles.push(Math.abs(particlesNumber - particlesCount));\n        }\n        else if (particlesCount > particlesNumber) {\n            this.particles.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        this.drawers = new Map();\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.options, undefined, 2);\n    }\n    refresh() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            yield this.start();\n        });\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        this.plugins = new Map();\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n    }\n    start() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            yield this.init();\n            this.started = true;\n            this.eventListeners.addListeners();\n            for (const [, plugin] of this.plugins) {\n                if (plugin.startAsync !== undefined) {\n                    yield plugin.startAsync();\n                }\n                else if (plugin.start !== undefined) {\n                    plugin.start();\n                }\n            }\n            this.play();\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.retina.init();\n            this.canvas.init();\n            const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n            for (const [id, plugin] of availablePlugins) {\n                this.plugins.set(id, plugin);\n            }\n            for (const [, drawer] of this.drawers) {\n                if (drawer.init) {\n                    yield drawer.init(this);\n                }\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.init) {\n                    plugin.init(this.options);\n                }\n                else if (plugin.initAsync !== undefined) {\n                    yield plugin.initAsync(this.options);\n                }\n            }\n            this.particles.init();\n            this.densityAutoParticles();\n        });\n    }\n    initDensityFactor() {\n        const densityOptions = this.options.particles.number.density;\n        if (!this.canvas.element || !densityOptions.enable) {\n            return;\n        }\n        const canvas = this.canvas.element;\n        const pxRatio = this.retina.pixelRatio;\n        this.density =\n            (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n}\nexports.Container = Container;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,4BAAD,CAAzB;;AACA,MAAMM,OAAO,GAAGN,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMF,SAAN,CAAgB;EACZS,WAAW,CAACC,EAAD,EAAKC,aAAL,EAAgC;IACvC,KAAKD,EAAL,GAAUA,EAAV;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,UAAL,GAAkB,KAAlB;IACA,KAAKC,MAAL,GAAc,IAAIZ,QAAQ,CAACa,MAAb,CAAoB,IAApB,CAAd;IACA,KAAKC,MAAL,GAAc,IAAIhB,QAAQ,CAACiB,MAAb,CAAoB,IAApB,CAAd;IACA,KAAKC,SAAL,GAAiB,IAAIjB,WAAW,CAACkB,SAAhB,CAA0B,IAA1B,CAAjB;IACA,KAAKC,MAAL,GAAc,IAAIjB,cAAc,CAACkB,YAAnB,CAAgC,IAAhC,CAAd;IACA,KAAKC,KAAL,GAAa;MACTC,QAAQ,EAAE,MAAM;QACZ,OAAO;UACHC,KAAK,EAAEC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,EAArB,GAA0B,CAD9B;UAEHC,MAAM,EAAEH,IAAI,CAACC,MAAL;QAFL,CAAP;MAIH,CANQ;MAOTG,IAAI,EAAE,MAAM,CACX,CARQ;MASTC,MAAM,EAAE,MAAM,CACb;IAVQ,CAAb;IAYA,KAAKC,aAAL,GAAqB;MACjBC,KAAK,EAAE;QACHC,QAAQ,EAAE,KADP;QAEHC,MAAM,EAAE;MAFL;IADU,CAArB;IAMA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,OAAL,GAAe;MAAElB,SAAS,EAAE;IAAb,CAAf;IACA,KAAKmB,OAAL,GAAe;MAAEnB,SAAS,EAAE;IAAb,CAAf;IACA,KAAKoB,OAAL,GAAe,IAAIC,GAAJ,EAAf;IACA,KAAKC,OAAL,GAAe,IAAID,GAAJ,EAAf;IACA,KAAKE,OAAL,GAAe,CAAf;IACA,KAAKC,OAAL,GAAe,IAAItC,SAAS,CAACuC,OAAd,EAAf;;IApCuC,kCAATC,OAAS;MAATA,OAAS;IAAA;;IAqCvC,KAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;MAC1B,KAAKF,OAAL,CAAaI,IAAb,CAAkBzC,OAAO,CAAC0C,OAAR,CAAgBC,SAAhB,CAA0BH,MAA1B,CAAlB;IACH;;IACD,MAAMI,MAAM,GAAG5C,OAAO,CAAC0C,OAAR,CAAgBG,kBAAhB,EAAf;;IACA,KAAK,MAAMC,IAAX,IAAmBF,MAAnB,EAA2B;MACvB,MAAM7B,MAAM,GAAGf,OAAO,CAAC0C,OAAR,CAAgBK,cAAhB,CAA+BD,IAA/B,CAAf;;MACA,IAAI/B,MAAJ,EAAY;QACR,KAAKoB,OAAL,CAAaa,GAAb,CAAiBF,IAAjB,EAAuB/B,MAAvB;MACH;IACJ;;IACD,IAAI,KAAKZ,aAAT,EAAwB;MACpB,KAAKkC,OAAL,CAAaI,IAAb,CAAkB,KAAKtC,aAAvB;IACH;;IACD,KAAK8C,cAAL,GAAsB,IAAIjD,OAAO,CAACkD,cAAZ,CAA2B,IAA3B,CAAtB;EACH;;EACDC,IAAI,CAACC,KAAD,EAAQ;IACR,MAAMC,WAAW,GAAG,KAAK/C,MAAL,IAAe8C,KAAnC;;IACA,IAAI,KAAK9C,MAAT,EAAiB;MACb,KAAKA,MAAL,GAAc,KAAd;IACH;;IACD,IAAI+C,WAAJ,EAAiB;MACb,KAAK,MAAM,GAAGC,MAAH,CAAX,IAAyB,KAAKrB,OAA9B,EAAuC;QACnC,IAAIqB,MAAM,CAACH,IAAX,EAAiB;UACbG,MAAM,CAACH,IAAP;QACH;MACJ;;MACD,KAAK5C,aAAL,GAAqBgD,WAAW,CAACC,GAAZ,EAArB;IACH;;IACD,KAAKC,IAAL;EACH;;EACDC,KAAK,GAAG;IACJ,IAAI,KAAKC,kBAAL,KAA4BC,SAAhC,EAA2C;MACvC5D,OAAO,CAAC6D,KAAR,CAAcC,eAAd,CAA8B,KAAKH,kBAAnC;MACA,OAAO,KAAKA,kBAAZ;IACH;;IACD,IAAI,KAAKrD,MAAT,EAAiB;MACb;IACH;;IACD,KAAK,MAAM,GAAGgD,MAAH,CAAX,IAAyB,KAAKrB,OAA9B,EAAuC;MACnC,IAAIqB,MAAM,CAACI,KAAX,EAAkB;QACdJ,MAAM,CAACI,KAAP;MACH;IACJ;;IACD,IAAI,CAAC,KAAKlD,UAAV,EAAsB;MAClB,KAAKF,MAAL,GAAc,IAAd;IACH;EACJ;;EACDmD,IAAI,GAAG;IACH,KAAKE,kBAAL,GAA0B3D,OAAO,CAAC6D,KAAR,CAAcE,OAAd,CAAuBC,CAAD,IAAO,KAAKjD,MAAL,CAAYkD,SAAZ,CAAsBD,CAAtB,CAA7B,CAA1B;EACH;;EACDE,kBAAkB,GAAG;IACjB,OAAO,CAAC,KAAK5D,MAAb;EACH;;EACD6D,QAAQ,CAACC,gBAAD,EAAmB5C,IAAnB,EAAyBC,MAAzB,EAAiC;IACrC,IAAI,CAAC2C,gBAAL,EAAuB;MACnB;IACH;;IACD,IAAI,OAAOA,gBAAP,KAA4B,UAAhC,EAA4C;MACxC,KAAKnD,KAAL,CAAWC,QAAX,GAAsBkD,gBAAtB;;MACA,IAAI5C,IAAJ,EAAU;QACN,KAAKP,KAAL,CAAWO,IAAX,GAAkBA,IAAlB;MACH;;MACD,IAAIC,MAAJ,EAAY;QACR,KAAKR,KAAL,CAAWQ,MAAX,GAAoBA,MAApB;MACH;IACJ,CARD,MASK;MACD,IAAI2C,gBAAgB,CAAClD,QAArB,EAA+B;QAC3B,KAAKD,KAAL,CAAWC,QAAX,GAAsBkD,gBAAgB,CAAClD,QAAvC;MACH;;MACD,IAAIkD,gBAAgB,CAAC5C,IAArB,EAA2B;QACvB,KAAKP,KAAL,CAAWO,IAAX,GAAkB4C,gBAAgB,CAAC5C,IAAnC;MACH;;MACD,IAAI4C,gBAAgB,CAAC3C,MAArB,EAA6B;QACzB,KAAKR,KAAL,CAAWQ,MAAX,GAAoB2C,gBAAgB,CAAC3C,MAArC;MACH;IACJ;EACJ;;EACD4C,oBAAoB,GAAG;IACnB,KAAKC,iBAAL;IACA,MAAMC,aAAa,GAAG,KAAKlC,OAAL,CAAaxB,SAAb,CAAuB2D,MAA7C;IACA,MAAMC,kBAAkB,GAAGF,aAAa,CAAChF,KAAzC;IACA,MAAMmF,iBAAiB,GAAGH,aAAa,CAACI,KAAd,GAAsB,CAAtB,GAA0BJ,aAAa,CAACI,KAAxC,GAAgDF,kBAA1E;IACA,MAAMG,eAAe,GAAGxD,IAAI,CAACyD,GAAL,CAASJ,kBAAT,EAA6BC,iBAA7B,IAAkD,KAAKtC,OAA/E;IACA,MAAM0C,cAAc,GAAG,KAAKjE,SAAL,CAAekE,KAAtC;;IACA,IAAID,cAAc,GAAGF,eAArB,EAAsC;MAClC,KAAK/D,SAAL,CAAemE,IAAf,CAAoB5D,IAAI,CAAC6D,GAAL,CAASL,eAAe,GAAGE,cAA3B,CAApB;IACH,CAFD,MAGK,IAAIA,cAAc,GAAGF,eAArB,EAAsC;MACvC,KAAK/D,SAAL,CAAeqE,cAAf,CAA8BJ,cAAc,GAAGF,eAA/C;IACH;EACJ;;EACDO,OAAO,GAAG;IACN,KAAKC,IAAL;IACA,KAAKzE,MAAL,CAAYwE,OAAZ;;IACA,KAAK,MAAM,GAAGpE,MAAH,CAAX,IAAyB,KAAKoB,OAA9B,EAAuC;MACnC,IAAIpB,MAAM,CAACoE,OAAX,EAAoB;QAChBpE,MAAM,CAACoE,OAAP,CAAe,IAAf;MACH;IACJ;;IACD,KAAKhD,OAAL,GAAe,IAAID,GAAJ,EAAf;IACA,KAAK7B,SAAL,GAAiB,IAAjB;EACH;;EACDgF,SAAS,CAACC,QAAD,EAAW;IAChB,KAAKC,WAAL,CAAiBD,QAAjB;EACH;;EACDC,WAAW,CAACD,QAAD,EAAWxC,IAAX,EAAiB0C,OAAjB,EAA0B;IACjC,IAAIC,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAK9E,MAAL,CAAY+E,OAAlB,MAA+B,IAA/B,IAAuCD,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACE,MAAH,CAAUL,QAAV,EAAoBxC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,WAA9D,EAA2E0C,OAA3E,CAAvE;EACH;;EACDI,mBAAmB,GAAG;IAClB,OAAOC,IAAI,CAACC,SAAL,CAAe,KAAKzD,OAApB,EAA6BuB,SAA7B,EAAwC,CAAxC,CAAP;EACH;;EACDmC,OAAO,GAAG;IACN,OAAOtG,OAAO,CAACuG,SAAR,CAAkB,IAAlB,EAAwB,KAAK,CAA7B,EAAgC,KAAK,CAArC,EAAwC,aAAa;MACxD,KAAKZ,IAAL;MACA,MAAM,KAAKa,KAAL,EAAN;IACH,CAHM,CAAP;EAIH;;EACDb,IAAI,GAAG;IACH,IAAI,CAAC,KAAKhF,OAAV,EAAmB;MACf;IACH;;IACD,KAAKA,OAAL,GAAe,KAAf;IACA,KAAK6C,cAAL,CAAoBiD,eAApB;IACA,KAAKxC,KAAL;IACA,KAAK7C,SAAL,CAAesF,KAAf;IACA,KAAKxF,MAAL,CAAYwF,KAAZ;;IACA,KAAK,MAAM,GAAG7C,MAAH,CAAX,IAAyB,KAAKrB,OAA9B,EAAuC;MACnC,IAAIqB,MAAM,CAAC8B,IAAX,EAAiB;QACb9B,MAAM,CAAC8B,IAAP;MACH;IACJ;;IACD,KAAKnD,OAAL,GAAe,IAAIC,GAAJ,EAAf;IACA,KAAKrB,SAAL,CAAeuF,WAAf,GAA6B,IAAIlE,GAAJ,EAA7B;IACA,OAAO,KAAKrB,SAAL,CAAewF,aAAtB;IACA,OAAO,KAAKxF,SAAL,CAAeyF,UAAtB;EACH;;EACDL,KAAK,GAAG;IACJ,OAAOxG,OAAO,CAACuG,SAAR,CAAkB,IAAlB,EAAwB,KAAK,CAA7B,EAAgC,KAAK,CAArC,EAAwC,aAAa;MACxD,IAAI,KAAK5F,OAAT,EAAkB;QACd;MACH;;MACD,MAAM,KAAKoB,IAAL,EAAN;MACA,KAAKpB,OAAL,GAAe,IAAf;MACA,KAAK6C,cAAL,CAAoBsD,YAApB;;MACA,KAAK,MAAM,GAAGjD,MAAH,CAAX,IAAyB,KAAKrB,OAA9B,EAAuC;QACnC,IAAIqB,MAAM,CAACkD,UAAP,KAAsB5C,SAA1B,EAAqC;UACjC,MAAMN,MAAM,CAACkD,UAAP,EAAN;QACH,CAFD,MAGK,IAAIlD,MAAM,CAAC2C,KAAP,KAAiBrC,SAArB,EAAgC;UACjCN,MAAM,CAAC2C,KAAP;QACH;MACJ;;MACD,KAAK9C,IAAL;IACH,CAhBM,CAAP;EAiBH;;EACD3B,IAAI,GAAG;IACH,OAAO/B,OAAO,CAACuG,SAAR,CAAkB,IAAlB,EAAwB,KAAK,CAA7B,EAAgC,KAAK,CAArC,EAAwC,aAAa;MACxD,KAAKvF,MAAL,CAAYe,IAAZ;MACA,KAAKb,MAAL,CAAYa,IAAZ;MACA,MAAMiF,gBAAgB,GAAGzG,OAAO,CAAC0C,OAAR,CAAgBgE,mBAAhB,CAAoC,IAApC,CAAzB;;MACA,KAAK,MAAM,CAACxG,EAAD,EAAKoD,MAAL,CAAX,IAA2BmD,gBAA3B,EAA6C;QACzC,KAAKxE,OAAL,CAAae,GAAb,CAAiB9C,EAAjB,EAAqBoD,MAArB;MACH;;MACD,KAAK,MAAM,GAAGvC,MAAH,CAAX,IAAyB,KAAKoB,OAA9B,EAAuC;QACnC,IAAIpB,MAAM,CAACS,IAAX,EAAiB;UACb,MAAMT,MAAM,CAACS,IAAP,CAAY,IAAZ,CAAN;QACH;MACJ;;MACD,KAAK,MAAM,GAAG8B,MAAH,CAAX,IAAyB,KAAKrB,OAA9B,EAAuC;QACnC,IAAIqB,MAAM,CAAC9B,IAAX,EAAiB;UACb8B,MAAM,CAAC9B,IAAP,CAAY,KAAKa,OAAjB;QACH,CAFD,MAGK,IAAIiB,MAAM,CAACqD,SAAP,KAAqB/C,SAAzB,EAAoC;UACrC,MAAMN,MAAM,CAACqD,SAAP,CAAiB,KAAKtE,OAAtB,CAAN;QACH;MACJ;;MACD,KAAKxB,SAAL,CAAeW,IAAf;MACA,KAAK6C,oBAAL;IACH,CAtBM,CAAP;EAuBH;;EACDC,iBAAiB,GAAG;IAChB,MAAMsC,cAAc,GAAG,KAAKvE,OAAL,CAAaxB,SAAb,CAAuB2D,MAAvB,CAA8BpC,OAArD;;IACA,IAAI,CAAC,KAAKzB,MAAL,CAAY+E,OAAb,IAAwB,CAACkB,cAAc,CAACC,MAA5C,EAAoD;MAChD;IACH;;IACD,MAAMlG,MAAM,GAAG,KAAKA,MAAL,CAAY+E,OAA3B;IACA,MAAMoB,OAAO,GAAG,KAAKrG,MAAL,CAAYsG,UAA5B;IACA,KAAK3E,OAAL,GACKzB,MAAM,CAACqG,KAAP,GAAerG,MAAM,CAACsG,MAAvB,IAAkCL,cAAc,CAACM,MAAf,GAAwBJ,OAAxB,GAAkCA,OAAlC,GAA4CF,cAAc,CAACO,IAA7F,CADJ;EAEH;;AArOW;;AAuOhB7H,OAAO,CAACE,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}