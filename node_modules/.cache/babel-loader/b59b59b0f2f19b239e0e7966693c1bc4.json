{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\n\nconst Updater_1 = require(\"./Particle/Updater\");\n\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\n\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nconst Enums_1 = require(\"../Enums\");\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Infecter_1 = require(\"./Particle/Infecter\");\n\nconst Mover_1 = require(\"./Particle/Mover\");\n\nclass Particle {\n  constructor(container, position, overrideOptions) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    this.container = container;\n    this.fill = true;\n    this.close = true;\n    this.links = [];\n    this.lastNoiseTime = 0;\n    this.destroyed = false;\n    const options = container.options;\n    const particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n    const shapeType = particlesOptions.shape.type;\n    this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        const overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n      }\n\n      const shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        const shapeData = shapeOptions.options[this.shape];\n\n        if (shapeData) {\n          this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n        }\n      }\n    } else {\n      const shapeData = particlesOptions.shape.options[this.shape];\n\n      if (shapeData) {\n        this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n      }\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.particlesOptions = particlesOptions;\n    const noiseDelay = this.particlesOptions.move.noise.delay;\n    this.noiseDelay = (noiseDelay.random.enable ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value) : noiseDelay.value) * 1000;\n    container.retina.initParticle(this);\n    const color = this.particlesOptions.color;\n    const sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n    const randomSize = typeof this.particlesOptions.size.random === \"boolean\" ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;\n    this.size = {\n      value: randomSize && this.randomMinimumSize !== undefined ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) : sizeValue\n    };\n    this.direction = this.particlesOptions.move.direction;\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    const rotateOptions = this.particlesOptions.rotate;\n    const degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n    this.angle = degAngle * Math.PI / 180;\n    this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n    this.rotateDirection = rotateOptions.direction;\n\n    if (this.rotateDirection === Enums_1.RotateDirection.random) {\n      const index = Math.floor(Math.random() * 2);\n      this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n    }\n\n    const sizeAnimation = this.particlesOptions.size.animation;\n\n    if (sizeAnimation.enable) {\n      switch (sizeAnimation.startValue) {\n        case Enums_1.StartValueType.min:\n          if (!randomSize) {\n            const pxRatio = container.retina.pixelRatio;\n            this.size.value = sizeAnimation.minimumValue * pxRatio;\n          }\n\n          break;\n      }\n\n      this.size.status = Enums_1.SizeAnimationStatus.increasing;\n      this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n\n    this.color = Utils_1.ColorUtils.colorToHsl(color);\n    const colorAnimation = this.particlesOptions.color.animation;\n\n    if (colorAnimation.enable) {\n      this.colorVelocity = colorAnimation.speed / 100;\n\n      if (!colorAnimation.sync) {\n        this.colorVelocity = this.colorVelocity * Math.random();\n      }\n    } else {\n      this.colorVelocity = 0;\n    }\n\n    if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n      this.color.h = Math.random() * 360;\n    }\n\n    this.position = this.calcPosition(this.container, position);\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n      throw new Error();\n    }\n\n    const opacityOptions = this.particlesOptions.opacity;\n    const randomOpacity = opacityOptions.random;\n    const opacityValue = opacityOptions.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n    const opacityAnimation = opacityOptions.animation;\n\n    if (opacityAnimation.enable) {\n      this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n      this.opacity.velocity = opacityAnimation.speed / 100;\n\n      if (!opacityAnimation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    let drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    const imageShape = this.loadImageShape(container, drawer);\n\n    if (imageShape) {\n      this.image = imageShape.image;\n      this.fill = imageShape.fill;\n      this.close = imageShape.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke;\n    this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n    this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n\n    if (typeof this.stroke.color !== \"string\") {\n      const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n\n      if (strokeColorAnimation && this.strokeColor) {\n        if (strokeColorAnimation.enable) {\n          this.strokeColorVelocity = colorAnimation.speed / 100;\n\n          if (!strokeColorAnimation.sync) {\n            this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n          }\n        } else {\n          this.strokeColorVelocity = 0;\n        }\n\n        if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n          this.strokeColor.h = Math.random() * 360;\n        }\n      }\n    }\n\n    this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(container, this);\n    this.infecter = new Infecter_1.Infecter(container, this);\n    this.mover = new Mover_1.Mover(container, this);\n  }\n\n  move(delta) {\n    this.mover.move(delta);\n  }\n\n  update(delta) {\n    this.updater.update(delta);\n  }\n\n  draw(delta) {\n    this.container.canvas.drawParticle(this, delta);\n  }\n\n  isOverlapping() {\n    const container = this.container;\n    let collisionFound = false;\n    const pos1 = this.getPosition();\n\n    for (const p2 of container.particles.array.filter(t => t != this)) {\n      const pos2 = p2.getPosition();\n      const dist = Utils_1.Utils.getDistance(pos1, pos2);\n\n      if (dist <= this.size.value + p2.size.value) {\n        collisionFound = true;\n        break;\n      }\n    }\n\n    return collisionFound;\n  }\n\n  getPosition() {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y\n    };\n  }\n\n  getFillColor() {\n    var _a;\n\n    return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n  }\n\n  getStrokeColor() {\n    var _a, _b;\n\n    return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n  }\n\n  destroy() {\n    this.destroyed = true;\n  }\n\n  checkOverlap(position) {\n    let iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const container = this.container;\n\n    if (!container.particles.count) {\n      return true;\n    }\n\n    if (iterations >= container.particles.count) {\n      return false;\n    }\n\n    const overlapping = this.isOverlapping();\n\n    if (overlapping) {\n      this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n      this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n      return this.checkOverlap(undefined, iterations + 1);\n    }\n\n    return true;\n  }\n\n  calcPosition(container, position) {\n    var _a, _b;\n\n    for (const [, plugin] of container.plugins) {\n      const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n      if (pluginPos !== undefined) {\n        return Utils_1.Utils.deepExtend({}, pluginPos);\n      }\n    }\n\n    const pos = {\n      x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n      y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height\n    };\n    const outMode = this.particlesOptions.move.outMode;\n\n    if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n      if (pos.x > container.canvas.size.width - this.size.value * 2) {\n        pos.x -= this.size.value;\n      } else if (pos.x < this.size.value * 2) {\n        pos.x += this.size.value;\n      }\n    }\n\n    if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n      if (pos.y > container.canvas.size.height - this.size.value * 2) {\n        pos.y -= this.size.value;\n      } else if (pos.y < this.size.value * 2) {\n        pos.y += this.size.value;\n      }\n    }\n\n    return pos;\n  }\n\n  calculateVelocity() {\n    const baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n    const res = {\n      horizontal: 0,\n      vertical: 0\n    };\n    const moveOptions = this.particlesOptions.move;\n    let rad;\n    let radOffset = Math.PI / 4;\n\n    if (typeof moveOptions.angle === \"number\") {\n      rad = Math.PI / 180 * moveOptions.angle;\n    } else {\n      rad = Math.PI / 180 * moveOptions.angle.value;\n      radOffset = Math.PI / 180 * moveOptions.angle.offset;\n    }\n\n    const range = {\n      left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n      right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2)\n    };\n\n    if (moveOptions.straight) {\n      res.horizontal = baseVelocity.x;\n      res.vertical = baseVelocity.y;\n\n      if (moveOptions.random) {\n        res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n      }\n    } else {\n      res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n      res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n    }\n\n    return res;\n  }\n\n  loadImageShape(container, drawer) {\n    var _a, _b, _c, _d, _e;\n\n    if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n      return;\n    }\n\n    const imageDrawer = drawer;\n    const images = imageDrawer.getImages(container).images;\n    const imageData = this.shapeData;\n    const image = (_a = images.find(t => t.source === imageData.src)) !== null && _a !== void 0 ? _a : images[0];\n    const color = this.getFillColor();\n    let imageRes;\n\n    if (!image) {\n      return;\n    }\n\n    if (image.svgData !== undefined && imageData.replaceColor && color) {\n      const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n      const svg = new Blob([svgColoredData], {\n        type: \"image/svg+xml\"\n      });\n      const domUrl = window.URL || window.webkitURL || window;\n      const url = domUrl.createObjectURL(svg);\n      const img = new Image();\n      imageRes = {\n        data: image,\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n        source: imageData.src\n      };\n      img.addEventListener(\"load\", () => {\n        if (this.image) {\n          this.image.loaded = true;\n          image.element = img;\n        }\n\n        domUrl.revokeObjectURL(url);\n      });\n      img.addEventListener(\"error\", () => {\n        domUrl.revokeObjectURL(url);\n        Utils_1.Utils.loadImage(imageData.src).then(img2 => {\n          if (this.image) {\n            image.element = img2.element;\n            this.image.loaded = true;\n          }\n        });\n      });\n      img.src = url;\n    } else {\n      imageRes = {\n        data: image,\n        loaded: true,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src\n      };\n    }\n\n    if (!imageRes.ratio) {\n      imageRes.ratio = 1;\n    }\n\n    const fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n    const close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n    return {\n      image: imageRes,\n      fill,\n      close\n    };\n  }\n\n}\n\nexports.Particle = Particle;","map":{"version":3,"names":["Object","defineProperty","exports","value","Particle","Updater_1","require","Particles_1","Shape_1","Enums_1","Utils_1","Infecter_1","Mover_1","constructor","container","position","overrideOptions","_a","_b","_c","_d","_e","_f","_g","_h","_j","fill","close","links","lastNoiseTime","destroyed","options","particlesOptions","Particles","load","particles","shapeType","shape","type","Array","Utils","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","deepExtend","undefined","noiseDelay","move","noise","delay","random","enable","randomInRange","minimumValue","retina","initParticle","color","sizeValue","randomSize","size","randomMinimumSize","direction","bubble","inRange","initialVelocity","calculateVelocity","velocity","horizontal","vertical","rotateOptions","rotate","degAngle","Math","angle","PI","pathAngle","atan2","rotateDirection","RotateDirection","index","floor","counterClockwise","clockwise","sizeAnimation","animation","startValue","StartValueType","min","pxRatio","pixelRatio","status","SizeAnimationStatus","increasing","sizeAnimationSpeed","sync","ColorUtils","colorToHsl","colorAnimation","colorVelocity","speed","h","calcPosition","offset","x","y","collisions","checkOverlap","Error","opacityOptions","opacity","randomOpacity","opacityValue","opacityAnimation","OpacityAnimationStatus","drawer","drawers","get","Plugins","getShapeDrawer","set","imageShape","loadImageShape","image","stroke","strokeWidth","width","strokeColor","strokeColorAnimation","strokeColorVelocity","shadowColor","colorToRgb","shadow","updater","Updater","infecter","Infecter","mover","Mover","delta","update","draw","canvas","drawParticle","isOverlapping","collisionFound","pos1","getPosition","p2","array","filter","t","pos2","dist","getDistance","getFillColor","getStrokeColor","destroy","iterations","count","overlapping","height","plugin","plugins","pluginPos","particlePosition","pos","outMode","isInArray","OutMode","bounce","bounceHorizontal","bounceVertical","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","range","left","sin","right","cos","straight","ShapeType","images","imageDrawer","getImages","imageData","find","source","src","imageRes","svgData","replaceColor","svgColoredData","replaceColorSvg","svg","Blob","domUrl","window","URL","webkitURL","url","createObjectURL","img","Image","data","loaded","ratio","replace_color","addEventListener","element","revokeObjectURL","loadImage","then","img2"],"sources":["/Users/isaicastro/Desktop/Projects/Face-Recognition/node_modules/tsparticles/dist/Core/Particle.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nclass Particle {\n    constructor(container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        const options = container.options;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.particlesOptions = particlesOptions;\n        const noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay =\n            (noiseDelay.random.enable\n                ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value)\n                : noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        const color = this.particlesOptions.color;\n        const sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n        const randomSize = typeof this.particlesOptions.size.random === \"boolean\"\n            ? this.particlesOptions.size.random\n            : this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined\n                ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue)\n                : sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        const rotateOptions = this.particlesOptions.rotate;\n        const degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n        this.angle = (degAngle * Math.PI) / 180;\n        this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n        this.rotateDirection = rotateOptions.direction;\n        if (this.rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        const sizeAnimation = this.particlesOptions.size.animation;\n        if (sizeAnimation.enable) {\n            switch (sizeAnimation.startValue) {\n                case Enums_1.StartValueType.min:\n                    if (!randomSize) {\n                        const pxRatio = container.retina.pixelRatio;\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = Enums_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.color = Utils_1.ColorUtils.colorToHsl(color);\n        const colorAnimation = this.particlesOptions.color.animation;\n        if (colorAnimation.enable) {\n            this.colorVelocity = colorAnimation.speed / 100;\n            if (!colorAnimation.sync) {\n                this.colorVelocity = this.colorVelocity * Math.random();\n            }\n        }\n        else {\n            this.colorVelocity = 0;\n        }\n        if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n            this.color.h = Math.random() * 360;\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n            throw new Error();\n        }\n        const opacityOptions = this.particlesOptions.opacity;\n        const randomOpacity = opacityOptions.random;\n        const opacityValue = opacityOptions.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = opacityAnimation.speed / 100;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke)\n                : this.particlesOptions.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n        if (typeof this.stroke.color !== \"string\") {\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                if (strokeColorAnimation.enable) {\n                    this.strokeColorVelocity = colorAnimation.speed / 100;\n                    if (!strokeColorAnimation.sync) {\n                        this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n                    }\n                }\n                else {\n                    this.strokeColorVelocity = 0;\n                }\n                if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n                    this.strokeColor.h = Math.random() * 360;\n                }\n            }\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container, this);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    isOverlapping() {\n        const container = this.container;\n        let collisionFound = false;\n        const pos1 = this.getPosition();\n        for (const p2 of container.particles.array.filter((t) => t != this)) {\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= this.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return collisionFound;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n    }\n    destroy() {\n        this.destroyed = true;\n    }\n    checkOverlap(position, iterations = 0) {\n        const container = this.container;\n        if (!container.particles.count) {\n            return true;\n        }\n        if (iterations >= container.particles.count) {\n            return false;\n        }\n        const overlapping = this.isOverlapping();\n        if (overlapping) {\n            this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            return this.checkOverlap(undefined, iterations + 1);\n        }\n        return true;\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Utils_1.Utils.deepExtend({}, pluginPos);\n            }\n        }\n        const pos = {\n            x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n            y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height,\n        };\n        const outMode = this.particlesOptions.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        const moveOptions = this.particlesOptions.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (moveOptions.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (moveOptions.random) {\n                res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n                res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d, _e;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const imageDrawer = drawer;\n        const images = imageDrawer.getImages(container).images;\n        const imageData = this.shapeData;\n        const image = (_a = images.find((t) => t.source === imageData.src)) !== null && _a !== void 0 ? _a : images[0];\n        const color = this.getFillColor();\n        let imageRes;\n        if (!image) {\n            return;\n        }\n        if (image.svgData !== undefined && imageData.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n                source: imageData.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(imageData.src).then((img2) => {\n                    if (this.image) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n        const close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}