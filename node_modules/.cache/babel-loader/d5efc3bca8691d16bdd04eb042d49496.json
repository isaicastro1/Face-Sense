{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nconst Modes_1 = require(\"../../../../Enums/Modes\");\n\nclass Grabber {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const mouse = container.interactivity.mouse;\n    const events = container.options.interactivity.events;\n\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n  }\n\n  reset() {}\n\n  interact() {\n    var _a, _b;\n\n    const container = this.container;\n    const options = container.options;\n    const interactivity = options.interactivity;\n\n    if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      const distance = container.retina.grabModeDistance;\n      const query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n\n      for (const particle of query) {\n        const pos = particle.getPosition();\n        const distance = Utils_1.Utils.getDistance(pos, mousePos);\n\n        if (distance <= container.retina.grabModeDistance) {\n          const grabLineOptions = interactivity.modes.grab.links;\n          const lineOpacity = grabLineOptions.opacity;\n          const grabDistance = container.retina.grabModeDistance;\n          const opacityLine = lineOpacity - distance * lineOpacity / grabDistance;\n\n          if (opacityLine > 0) {\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.particlesOptions.links.color;\n\n            if (!container.particles.grabLineColor) {\n              const linksOptions = container.options.interactivity.modes.grab.links;\n              const color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n              if (color === Utils_1.Constants.randomColorValue) {\n                if (linksOptions.consent) {\n                  container.particles.grabLineColor = Utils_1.ColorUtils.colorToRgb({\n                    value: color\n                  });\n                } else if (linksOptions.blink) {\n                  container.particles.grabLineColor = Utils_1.Constants.randomColorValue;\n                } else {\n                  container.particles.grabLineColor = Utils_1.Constants.midColorValue;\n                }\n              } else if (color !== undefined) {\n                container.particles.grabLineColor = Utils_1.ColorUtils.colorToRgb({\n                  value: color\n                });\n              }\n            }\n\n            let colorLine;\n\n            if (container.particles.grabLineColor === Utils_1.Constants.randomColorValue) {\n              colorLine = Utils_1.ColorUtils.getRandomRgbColor();\n            } else if (container.particles.grabLineColor === \"mid\") {\n              const sourceColor = (_b = particle.getFillColor()) !== null && _b !== void 0 ? _b : particle.getStrokeColor();\n              colorLine = sourceColor ? Utils_1.ColorUtils.hslToRgb(sourceColor) : undefined;\n            } else {\n              colorLine = container.particles.grabLineColor;\n            }\n\n            if (colorLine === undefined) {\n              return;\n            }\n\n            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n          }\n        }\n      }\n    }\n  }\n\n}\n\nexports.Grabber = Grabber;","map":{"version":3,"names":["Object","defineProperty","exports","value","Grabber","Utils_1","require","Modes_1","constructor","container","isEnabled","mouse","interactivity","events","options","onHover","enable","position","hoverMode","mode","Utils","isInArray","HoverMode","grab","reset","interact","_a","_b","status","Constants","mouseMoveEvent","mousePos","undefined","distance","retina","grabModeDistance","query","particles","quadTree","Circle","x","y","particle","pos","getPosition","getDistance","grabLineOptions","modes","links","lineOpacity","opacity","grabDistance","opacityLine","optColor","color","particlesOptions","grabLineColor","linksOptions","randomColorValue","consent","ColorUtils","colorToRgb","blink","midColorValue","colorLine","getRandomRgbColor","sourceColor","getFillColor","getStrokeColor","hslToRgb","canvas","drawGrabLine"],"sources":["/Users/isaicastro/Desktop/Projects/Face-Recognition/node_modules/tsparticles/dist/Core/Particle/Interactions/Mouse/Grabber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Modes_1 = require(\"../../../../Enums/Modes\");\nclass Grabber {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.options.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a, _b;\n        const container = this.container;\n        const options = container.options;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance;\n            const query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n            for (const particle of query) {\n                const pos = particle.getPosition();\n                const distance = Utils_1.Utils.getDistance(pos, mousePos);\n                if (distance <= container.retina.grabModeDistance) {\n                    const grabLineOptions = interactivity.modes.grab.links;\n                    const lineOpacity = grabLineOptions.opacity;\n                    const grabDistance = container.retina.grabModeDistance;\n                    const opacityLine = lineOpacity - (distance * lineOpacity) / grabDistance;\n                    if (opacityLine > 0) {\n                        const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.particlesOptions.links.color;\n                        if (!container.particles.grabLineColor) {\n                            const linksOptions = container.options.interactivity.modes.grab.links;\n                            const color = typeof optColor === \"string\" ? optColor : optColor.value;\n                            if (color === Utils_1.Constants.randomColorValue) {\n                                if (linksOptions.consent) {\n                                    container.particles.grabLineColor = Utils_1.ColorUtils.colorToRgb({\n                                        value: color,\n                                    });\n                                }\n                                else if (linksOptions.blink) {\n                                    container.particles.grabLineColor = Utils_1.Constants.randomColorValue;\n                                }\n                                else {\n                                    container.particles.grabLineColor = Utils_1.Constants.midColorValue;\n                                }\n                            }\n                            else if (color !== undefined) {\n                                container.particles.grabLineColor = Utils_1.ColorUtils.colorToRgb({\n                                    value: color,\n                                });\n                            }\n                        }\n                        let colorLine;\n                        if (container.particles.grabLineColor === Utils_1.Constants.randomColorValue) {\n                            colorLine = Utils_1.ColorUtils.getRandomRgbColor();\n                        }\n                        else if (container.particles.grabLineColor === \"mid\") {\n                            const sourceColor = (_b = particle.getFillColor()) !== null && _b !== void 0 ? _b : particle.getStrokeColor();\n                            colorLine = sourceColor ? Utils_1.ColorUtils.hslToRgb(sourceColor) : undefined;\n                        }\n                        else {\n                            colorLine = container.particles.grabLineColor;\n                        }\n                        if (colorLine === undefined) {\n                            return;\n                        }\n                        container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}